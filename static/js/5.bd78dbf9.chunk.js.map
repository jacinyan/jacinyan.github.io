{"version":3,"sources":["hooks/users.ts","app/components/common/IdSelect.tsx","app/components/project-list/UserSelect.tsx","app/components/project-list/SearchPanel.tsx","hooks/projects.ts","app/components/common/Marking.tsx","app/components/project-list/More.tsx","app/components/project-list/List.tsx","app/screens/project-list/index.styles.ts","app/components/common/FlexRow.tsx","app/screens/project-list/index.tsx","hooks/epics.ts","app/screens/epic/index.styles.ts","hooks/tasks.ts","app/components/epic/CreateEpic.tsx","app/screens/epic/index.tsx","hooks/kanban.ts","hooks/dragndrop.ts","app/screens/kanban/index.styles.ts","app/components/common/Drag.tsx","app/components/common/Drop.tsx","app/components/common/DropChild.tsx","hooks/task-types.ts","app/components/kanban/TaskTypeSelect.tsx","app/components/common/TaskModal.tsx","app/components/kanban/swimlane/index.styles.ts","app/components/kanban/CreateSwimLane.tsx","app/components/kanban/SearchPanel.tsx","app/components/kanban/CreateTask.tsx","app/components/kanban/More.tsx","assets/task.svg","assets/bug.svg","app/components/kanban/TaskType.tsx","app/components/kanban/Highlighting.tsx","app/components/kanban/TaskCard.tsx","app/components/kanban/swimlane/index.tsx","app/screens/kanban/index.tsx","app/screens/project/index.styles.ts","app/screens/project/index.tsx","assets/logo-header.svg","app/AuthenticatedApp.styles.ts","app/components/common/ProjectModal.tsx","app/components/common/ProjectPopover.tsx","app/components/common/UserPopover.tsx","app/AuthenticatedApp.tsx"],"names":["useUsers","params","$fetch","useConfigureFetch","useQuery","IdSelect","props","value","onChange","defaultOption","options","restProps","toNumber","isNaN","Number","length","undefined","Option","map","option","id","name","UserSelect","users","data","SearchPanel","setParams","layout","css","marginBottom","Item","type","e","target","placeholder","projectLeadId","useProjects","removeEmptyQueryValues","useProjectDetails","enabled","Boolean","useEditProject","queryKey","useMutation","method","useEditQueryConfig","useCreateProject","useCreateQueryConfig","useProjectsSearchParams","useURLSearchParams","useMemo","useProjectsQueryKey","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","setSearchParams","useSetSearchParams","projectDetails","isLoading","projectModalOpen","open","close","startEdit","useProjectIdInURL","useLocation","pathname","match","useProjectInURL","Marking","checked","onCheckedChange","count","num","More","project","deleteProject","useDeleteQueryConfig","useDeleteProject","mutate","overlay","onClick","Modal","confirm","title","content","okText","onOk","confirmDeleteProject","List","rowKey","index","pagination","columns","disabled","render","marked","sorter","a","b","localeCompare","to","String","dataIndex","team","find","user","createdAt","dayjs","format","Container","styled","div","FlexRow","spaceBetween","gap","ProjectListScreen","useDocumentTitle","useDebounce","list","error","Profiler","ErrorBox","loading","dataSource","useEpicsSearchParams","projectId","useEpicsQueryKey","useTasks","debouncedParams","useTasksSearchParams","typeId","assigneeId","tagId","useTasksQueryKey","useTaskModal","editingTaskId","setEditingTaskId","useTaskDetails","taskDetails","useCallback","CreateEpic","useCreateEpic","createEpic","mutateAsync","Form","useForm","form","onFinish","values","onClose","useEffect","resetFields","visible","forceRender","destroyOnClose","width","style","height","display","flexDirection","justifyContent","alignItems","size","label","rules","required","message","textAlign","htmlType","EpicScreen","currProject","epics","useEpics","tasks","deleteEpic","useDeleteEpic","useState","epicCreateOpen","setEpicCreateOpen","console","log","overflow","itemLayout","renderItem","epic","Meta","confirmDeleteEpic","description","start","end","filter","task","epicId","useSwimlanes","useSwimlanesSearchParams","useSwimlanesQueryKey","useDragEnd","swimlanes","reorderSwimlane","useReorderSwimlaneQueryConfig","useReorderSwimlane","reorderTask","useReorderTaskQueryConfig","useReorderTask","allTasks","source","destination","fromId","toId","referenceId","fromSwimlaneId","droppableId","toSwimlaneId","fromTask","swimlaneId","toTask","LanesContainer","Drag","children","provided","React","isValidElement","cloneElement","draggableProps","dragHandleProps","ref","innerRef","Drop","droppableProps","DropChild","forwardRef","useTaskTypes","TaskTypeSelect","taskTypes","TaskModal","useEditTask","editTask","editLoading","deleteTask","useDeleteTask","getFieldsValue","setFieldsValue","onCancel","cancelText","confirmLoading","initialValues","labelCol","span","wrapperCol","fontSize","TasksWrapper","CreateSwimLane","setName","createSwimlane","useCreateSwimlane","submit","onPressEnter","searchParams","CreateTask","createTask","useCreateTask","inputMode","setInputMode","toggle","mode","onBlur","autoFocus","swimlane","useDeleteSwimlane","TaskType","taskType","src","taskIcon","bugIcon","alt","Highlighting","keyword","arr","split","str","color","TaskCard","cursor","Swimlane","direction","minHeight","draggableId","KanbanScreen","swimlaneLoading","onDragEnd","Aside","Main","ProjectScreen","selectedKeys","units","useRouteType","backgroundColor","icon","HddOutlined","UnorderedListOutlined","path","element","window","location","replace","Header","HeaderLeft","HeaderRight","main","ProjectModal","mutateLoading","then","ProjectPopover","projects","refetch","markedProjects","minWidth","Text","padding","placement","onVisibleChange","UserPopover","arrowPointAtCenter","AuthenticatedApp","AuthedHeader","resetRoutes","logoHeader","User","useAuth","logout","preventDefault"],"mappings":"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","file":"static/js/5.bd78dbf9.chunk.js","sourcesContent":["import { useConfigureFetch } from \"./api\";\nimport { User } from \"types\";\nimport { useQuery } from \"react-query\";\n\nexport const useUsers = (params?: Partial<User>) => {\n  const $fetch = useConfigureFetch();\n\n  return useQuery<User[]>([\"users\", params], () => $fetch(\"users\", { params }));\n};\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { StringOrNumber } from \"types\";\n\ntype SelectProps = React.ComponentProps<typeof Select>;\n\n//'value' accepts various types\n//'onChange' calls callbacks that accept only 'number|undefined'\n//when isNan(Number(value)) is true, defaultOption is selected and subsequently 'onChange' calls callbacks that accept undefined only\ninterface IdSelectProps\n  extends Omit<SelectProps, \"value\" | \"onChange\" | \"options\"> {\n  value?: StringOrNumber | null | undefined;\n  onChange?: (value?: number) => void;\n  defaultOption?: string;\n  options?: { name: string; id: number }[];\n}\n\nconst IdSelect = (props: IdSelectProps) => {\n  const { value, onChange, defaultOption, options, ...restProps } = props;\n  const toNumber = (value: unknown) =>\n    isNaN(Number(value)) ? 0 : Number(value);\n\n  return (\n    <Select\n      // simply prevents default display from antd of an id instead of some text when loading\n      value={options?.length ? toNumber(value) : 0}\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\n      {...restProps}\n    >\n      {defaultOption && (\n        <Select.Option value={0}>{defaultOption}</Select.Option>\n      )}\n      {options?.map((option) => (\n        <Select.Option value={option.id} key={option.id}>\n          {option.name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nexport default IdSelect;\n","import { useUsers } from \"hooks/users\";\nimport React from \"react\";\nimport IdSelect from \"../common/IdSelect\";\n\nconst UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: users } = useUsers();\n\n  return <IdSelect options={users || []} {...props} />;\n};\n\nexport default UserSelect;\n","/** @jsxImportSource @emotion/react */\nimport { Input, Form } from \"antd\";\nimport { Project, User } from \"types\";\nimport UserSelect from \"./UserSelect\";\n\ninterface SearchPanelProps {\n  users: User[];\n  params: Partial<Pick<Project, \"name\" | \"projectLeadId\">>;\n  //dynamically updates the type of setParams WRT params\n  setParams: (params: SearchPanelProps[\"params\"]) => void;\n}\n\nconst SearchPanel = ({ params, setParams }: SearchPanelProps) => {\n  return (\n    // @emotion supports inline styles while React doesn't ...\n    <Form layout={\"inline\"} css={{ marginBottom: \"2rem\" }}>\n      <Form.Item>\n        <Input\n          type=\"text\"\n          value={params.name}\n          onChange={(e) =>\n            setParams({\n              ...params,\n              name: e.target.value,\n            })\n          }\n          placeholder={\"Project Name (Case Sensitive)\"}\n        />\n      </Form.Item>\n      <Form.Item>\n        <UserSelect\n          defaultOption={\"Project Lead\"}\n          value={params.projectLeadId}\n          onChange={(value) =>\n            setParams({\n              ...params,\n              projectLeadId: value,\n            })\n          }\n        />\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SearchPanel;\n","import { useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useQuery, useMutation, QueryKey } from \"react-query\";\nimport {\n  useConfigureFetch,\n  useEditQueryConfig,\n  useCreateQueryConfig,\n  useDeleteQueryConfig,\n} from \"./api\";\nimport { useSetSearchParams, useURLSearchParams } from \"./_helpers\";\nimport { Project } from \"types\";\nimport { removeEmptyQueryValues } from \"utils\";\n\n// fetches projects when ProjectScreen loads, when no params are input, the whole project list is returned\nexport const useProjects = (params?: Partial<Project>) => {\n  const $fetch = useConfigureFetch();\n\n  // useQuery's second type param TError is default to unknown, which should have been explicitly declared 'Error' for any component that consumes the returned QueryResult\n  // An ErrorBox is abstracted for this reason without having to do so\n  //update removeEmptyQueryValues to centralize the query key to be an empty object regardless of whether its' null or undefined or no inputs\n  return useQuery<Project[]>([\"projects\", removeEmptyQueryValues(params)], () =>\n    $fetch(\"projects\", { params })\n  );\n};\n\nexport const useProjectDetails = (id?: number) => {\n  const $fetch = useConfigureFetch();\n\n  return useQuery<Project>(\n    [\"project\", { id }],\n    () => $fetch(`projects/${id}`),\n    //'enabled' is to prevent useQuery from running the above callback if the id param is undefined\n    {\n      enabled: Boolean(id),\n    }\n  );\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: Partial<Project>) =>\n      $fetch(`projects/${params.id}`, { method: \"PATCH\", params }),\n    useEditQueryConfig(queryKey)\n  );\n};\n\nexport const useCreateProject = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: Partial<Project>) =>\n      $fetch(`projects`, { method: \"POST\", params }),\n    useCreateQueryConfig(queryKey)\n  );\n};\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    ({ id }: { id: number }) => $fetch(`projects/${id}`, { method: \"DELETE\" }),\n    useDeleteQueryConfig(queryKey)\n  );\n};\n\n// transform the type in the id of select option of searchParams from useURLSearchParams of string to number, this hook is to act as the final refinement. //// similar logic will be used in, e.g, useSwimlanesSearchParams and useTasksSearchParams with a little tweaking\nexport const useProjectsSearchParams = () => {\n  const [params, setParams] = useURLSearchParams([\"name\", \"projectLeadId\"]);\n\n  return [\n    useMemo(\n      () => ({\n        ...params,\n        projectLeadId: Number(params.projectLeadId) || undefined,\n      }),\n      [params]\n    ),\n    setParams,\n  ] as const;\n};\n\n// used in conjunction with previously defined hooks where useMutation is used to act as the input queryKey param, and ultimately passed in their respective query config hooks\nexport const useProjectsQueryKey = () => {\n  //the second item of the query key array is from useProjectsSearchParams\n  const [params] = useProjectsSearchParams();\n  return [\"projects\", params];\n};\n\n// globally manages the modal open/close states with URL, which is going to be used in ProjectModal.tsx for its own open/close state management.\n// shared across More.tsx in components/project-list for 'Edit' initiation, and index.tsx in screens/project-list and ProjectPopover.tsx for 'Create' initiation (create/edit are taken care of concurrently in this hook)\nexport const useProjectModal = () => {\n  //calling useURLSearchParams for specifying the keys in the URL for value manipulation later\n  const [{ projectCreate }, setProjectCreate] = useURLSearchParams([\n    \"projectCreate\",\n  ]);\n  const [{ editingProjectId }, setEditingProjectId] = useURLSearchParams([\n    \"editingProjectId\",\n  ]);\n  // comes from useSetSearchParams only\n  const setSearchParams = useSetSearchParams();\n\n  //if editing a project, its details are fetched first\n  const { data: projectDetails, isLoading } = useProjectDetails(\n    Number(editingProjectId)\n  );\n\n  const open = () => setProjectCreate({ projectCreate: true });\n  const close = () =>\n    setSearchParams({ projectCreate: \"\", editingProjectId: \"\" });\n  //call setEditingProjectId if editing a project\n  const startEdit = (id: number) =>\n    setEditingProjectId({ editingProjectId: id });\n\n  return {\n    // with ' editingProjectId', open the modal immediately without waiting for project details to be in place\n    // centralizes the open/close state with 'projectModalOpen'\n    projectModalOpen: projectCreate === \"true\" || Boolean(editingProjectId),\n    open,\n    close,\n    startEdit,\n    projectDetails,\n    isLoading,\n  };\n};\n\n//The following two hooks are specifically for swimlanes in kanban and the tasks in each swimlane under a specific project resource\nexport const useProjectIdInURL = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n\n  return Number(id);\n};\nexport const useProjectInURL = () => useProjectDetails(useProjectIdInURL());\n","import React from \"react\";\nimport { Rate } from \"antd\";\n\ninterface MarkingProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst Marking = ({ checked, onCheckedChange, ...restProps }: MarkingProps) => {\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(num) => onCheckedChange?.(!!num)}\n      {...restProps}\n    ></Rate>\n  );\n};\n\nexport default Marking;\n","import { Dropdown, Menu, Button, Modal } from \"antd\";\nimport {\n  useDeleteProject,\n  useProjectModal,\n  useProjectsQueryKey,\n} from \"hooks/projects\";\nimport { Project } from \"types\";\n\nconst More = ({ project }: { project: Project }) => {\n  const { startEdit } = useProjectModal();\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\n\n  // curried point free with the pre-existing id param\n  const editProject = (id: number) => () => startEdit(id);\n\n  const confirmDeleteProject = (id: number) => {\n    Modal.confirm({\n      title: \"Are you sure you want to delete this project?\",\n      content: \"Click to Confirm\",\n      okText: \"Confirm\",\n      onOk() {\n        deleteProject({ id });\n      },\n    });\n  };\n\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item onClick={editProject(project.id)} key={\"edit\"}>\n            Edit\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => confirmDeleteProject(project.id)}\n            key={\"delete\"}\n          >\n            Delete\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <Button type={\"link\"}>...</Button>\n    </Dropdown>\n  );\n};\n\nexport default More;\n","import { Link } from \"react-router-dom\";\nimport { Table } from \"antd\";\nimport { TableProps } from \"antd/lib/table\";\nimport { useEditProject, useProjectsQueryKey } from \"hooks/projects\";\nimport Marking from \"../common/Marking\";\nimport { User, Project } from \"types\";\nimport dayjs from \"dayjs\";\nimport More from \"./More\";\n\ninterface ListProps extends TableProps<Project> {\n  users: User[];\n}\n\nconst List = ({ users, ...restProps }: ListProps) => {\n  const { mutate } = useEditProject(useProjectsQueryKey());\n\n  // curried point free with the pre-existing id param\n  const markProject = (id: number) => (marked: boolean) =>\n    mutate({ id, marked });\n\n  return (\n    <Table\n      rowKey={(project, index) => `complete${project.id}${index}`}\n      pagination={false}\n      columns={[\n        {\n          title: <Marking checked disabled />,\n          render(value, project) {\n            return (\n              <Marking\n                checked={project.marked}\n                onCheckedChange={markProject(project.id)}\n              />\n            );\n          },\n        },\n        {\n          title: \"Name\",\n          sorter: (a, b) => a.name.localeCompare(b.name),\n          render(value, project) {\n            //https://reacttraining.com/blog/react-router-v6-pre/\n            // declare relative paths to append them to the current location\n            return <Link to={String(project.id)}>{project.name}</Link>;\n          },\n        },\n        {\n          title: \"Team\",\n          dataIndex: \"team\",\n          sorter: (a, b) => a.team.localeCompare(b.team),\n        },\n        {\n          title: \"Project Lead\",\n          render(value, project) {\n            return (\n              <span>\n                {users.find((user) => user.id === project.projectLeadId)\n                  ?.name || \"Unknown\"}\n              </span>\n            );\n          },\n        },\n        {\n          title: \"Created At\",\n          render(value, project) {\n            return (\n              <span>\n                {project.createdAt\n                  ? dayjs(project.createdAt).format(\"DD-MM-YYYY\")\n                  : \"Null\"}\n              </span>\n            );\n          },\n        },\n        {\n          render(value, project) {\n            return <More project={project} />;\n          },\n        },\n      ]}\n      {...restProps}\n    ></Table>\n  );\n};\n\nexport default List;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from \"@emotion/styled\";\n\nconst FlexRow = styled.div<{\n  gap?: number | boolean;\n  spaceBetween?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) =>\n    props.spaceBetween ? \"space-between\" : undefined};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nexport default FlexRow;\n","import { Button } from \"antd\";\nimport SearchPanel from \"app/components/project-list/SearchPanel\";\nimport List from \"app/components/project-list/List\";\nimport {\n  useProjectModal,\n  useProjects,\n  useProjectsSearchParams,\n} from \"hooks/projects\";\nimport { useDebounce, useDocumentTitle } from \"hooks/_helpers\";\nimport { useUsers } from \"hooks/users\";\nimport { Container } from \"./index.styles\";\nimport ErrorBox from \"app/components/common/ErrorBox\";\nimport FlexRow from \"app/components/common/FlexRow\";\nimport { Profiler } from \"app/components/common/Profiler\";\n\nconst ProjectListScreen = () => {\n  useDocumentTitle(\"Project List\", false);\n  // console.count(\"ProjectListScreen\");\n  const { open } = useProjectModal();\n\n  const [params, setParams] = useProjectsSearchParams();\n  const {\n    isLoading,\n    data: list,\n    error,\n  } = useProjects(useDebounce(params, 500));\n\n  const { data: users } = useUsers();\n\n  return (\n    <Profiler id={\"project-list\"}>\n      <Container>\n        <FlexRow spaceBetween marginBottom={2}>\n          <h1>Project List</h1>\n          <Button onClick={open}>Create Project</Button>\n        </FlexRow>\n        <SearchPanel\n          params={params}\n          setParams={setParams}\n          users={users || []}\n        />\n        {error && <ErrorBox error={error} />}\n        <List users={users || []} loading={isLoading} dataSource={list || []} />\n      </Container>\n    </Profiler>\n  );\n};\n\n// ProjectListScreen.whyDidYouRender = true;\n// class ProjectListScreen extends React.Component<any, any>{\n// static whyDidYouRender = true\n//....\n// }\n\nexport default ProjectListScreen;\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport {\n  useConfigureFetch,\n  useCreateQueryConfig,\n  useDeleteQueryConfig,\n} from \"./api\";\nimport { Epic } from \"types\";\nimport { useProjectIdInURL } from \"./projects\";\n\nexport const useEpics = (params?: Partial<Epic>) => {\n  const $fetch = useConfigureFetch();\n\n  return useQuery<Epic[]>([\"epics\", params], () => $fetch(\"epics\", { params }));\n};\n\nexport const useCreateEpic = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: Partial<Epic>) => $fetch(`epics`, { method: \"POST\", params }),\n    useCreateQueryConfig(queryKey)\n  );\n};\n\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    ({ id }: { id: number }) => $fetch(`epics/${id}`, { method: \"DELETE\" }),\n    useDeleteQueryConfig(queryKey)\n  );\n};\n\nexport const useEpicsSearchParams = () => ({\n  projectId: useProjectIdInURL(),\n});\n\nexport const useEpicsQueryKey = () => [\"epics\", useEpicsSearchParams()];\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import { useCallback, useMemo } from \"react\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport {\n  useConfigureFetch,\n  useCreateQueryConfig,\n  useDeleteQueryConfig,\n  useEditQueryConfig,\n  useReorderTaskQueryConfig,\n} from \"./api\";\nimport { SortProps, Task } from \"types\";\nimport { useProjectIdInURL } from \"./projects\";\nimport { useDebounce, useURLSearchParams } from \"./_helpers\";\n\nexport const useTasks = (params?: Partial<Task>) => {\n  const $fetch = useConfigureFetch();\n  const debouncedParams = { ...params, name: useDebounce(params?.name, 500) };\n\n  return useQuery<Task[]>([\"tasks\", params], () =>\n    $fetch(\"tasks\", { params: debouncedParams })\n  );\n};\n\nexport const useTaskDetails = (id?: number) => {\n  const $fetch = useConfigureFetch();\n\n  return useQuery<Task>(\n    [\"task\", { id }],\n    () => $fetch(`tasks/${id}`),\n    //enabled prop is to prevent react-query from running this callback if the id is undefined\n    {\n      enabled: Boolean(id),\n    }\n  );\n};\n\nexport const useCreateTask = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: Partial<Task>) => $fetch(`tasks`, { method: \"POST\", params }),\n    useCreateQueryConfig(queryKey)\n  );\n};\n\nexport const useEditTask = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: Partial<Task>) =>\n      $fetch(`tasks/${params.id}`, { method: \"PATCH\", params }),\n    useEditQueryConfig(queryKey)\n  );\n};\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    ({ id }: { id: number }) => $fetch(`tasks/${id}`, { method: \"DELETE\" }),\n    useDeleteQueryConfig(queryKey)\n  );\n};\n\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: SortProps) =>\n      $fetch(\"tasks/reorder\", {\n        params,\n        method: \"POST\",\n      }),\n    useReorderTaskQueryConfig(queryKey)\n  );\n};\n\nexport const useTasksSearchParams = () => {\n  const [params] = useURLSearchParams([\n    \"name\",\n    \"typeId\",\n    \"assigneeId\",\n    \"tagId\",\n  ]);\n\n  const projectId = useProjectIdInURL();\n\n  return useMemo(\n    () => ({\n      projectId,\n      typeId: Number(params.typeId) || undefined,\n      assigneeId: Number(params.assigneeId) || undefined,\n      tagId: Number(params.tagId) || undefined,\n      name: params.name,\n    }),\n    [projectId, params]\n  );\n};\n\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\n\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useURLSearchParams([\n    \"editingTaskId\",\n  ]);\n\n  const { data: taskDetails, isLoading } = useTaskDetails(\n    Number(editingTaskId)\n  );\n\n  const startEdit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: \"\" });\n  }, [setEditingTaskId]);\n\n  return {\n    taskDetails,\n    startEdit,\n    close,\n    isLoading,\n    editingTaskId,\n  };\n};\n","import { useEffect } from \"react\";\nimport { Button, Drawer, Form, Input, Spin } from \"antd\";\nimport { DrawerProps } from \"antd/es/drawer\";\nimport { useCreateEpic, useEpicsQueryKey } from \"hooks/epics\";\nimport { useProjectIdInURL } from \"hooks/projects\";\nimport ErrorBox from \"app/components/common/ErrorBox\";\n\nexport const CreateEpic = (\n  // ‘visible' props is passed down from its parent comp and locally managed\n  // override default onClose type\n  props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }\n) => {\n  const {\n    mutateAsync: createEpic,\n    isLoading,\n    error,\n  } = useCreateEpic(useEpicsQueryKey());\n  const [form] = Form.useForm();\n  const projectId = useProjectIdInURL();\n\n  const onFinish = async (values: any) => {\n    await createEpic({ ...values, projectId });\n    props.onClose();\n  };\n\n  useEffect(() => {\n    form.resetFields();\n  }, [form, props.visible]);\n\n  return (\n    <Drawer\n      visible={props.visible}\n      onClose={props.onClose}\n      forceRender={true}\n      destroyOnClose={true}\n      width={\"100%\"}\n    >\n      <div\n        style={{\n          height: \"80vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <>\n            <h1>Create Epic</h1>\n            <ErrorBox error={error} />\n            <Form\n              form={form}\n              layout={\"vertical\"}\n              style={{ width: \"40rem\" }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={\"Name\"}\n                name={\"name\"}\n                rules={[\n                  { required: true, message: \"Please enter the epic name\" },\n                ]}\n              >\n                <Input placeholder={\"Epic Name\"} />\n              </Form.Item>\n              <Form.Item style={{ textAlign: \"right\" }}>\n                <Button\n                  loading={isLoading}\n                  type={\"primary\"}\n                  htmlType={\"submit\"}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </div>\n    </Drawer>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport { List, Button, Modal } from \"antd\";\nimport dayjs from \"dayjs\";\nimport FlexRow from \"app/components/common/FlexRow\";\nimport {\n  useDeleteEpic,\n  useEpics,\n  useEpicsQueryKey,\n  useEpicsSearchParams,\n} from \"hooks/epics\";\nimport { useProjectInURL } from \"hooks/projects\";\nimport { Container } from \"./index.styles\";\nimport { useTasks } from \"hooks/tasks\";\nimport { Epic } from \"types\";\nimport { CreateEpic } from \"app/components/epic/CreateEpic\";\nimport { useState } from \"react\";\n\nconst EpicScreen = () => {\n  const { data: currProject } = useProjectInURL();\n  const { data: epics } = useEpics(useEpicsSearchParams());\n\n  const { data: tasks } = useTasks({ projectId: currProject?.id });\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\n\n  //locally managed open/close of CreateEpic\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\n\n  const confirmDeleteEpic = (epic: Epic) => {\n    Modal.confirm({\n      title: `Confirm Deleting：${epic.name}`,\n      content: \"Click to confirm\",\n      okText: \"Confirm\",\n      onOk() {\n        deleteEpic({ id: epic.id });\n      },\n    });\n  };\n\n  console.log(epics);\n\n  return (\n    <Container>\n      <FlexRow spaceBetween>\n        <h1>{currProject?.name} Epics</h1>\n        <Button onClick={() => setEpicCreateOpen(true)}>Create Epic</Button>\n      </FlexRow>\n      <List\n        style={{ overflow: \"scroll\" }}\n        dataSource={epics}\n        itemLayout={\"vertical\"}\n        renderItem={(epic) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <FlexRow spaceBetween>\n                  <span>{epic.name}</span>\n                  <Button type={\"link\"} onClick={() => confirmDeleteEpic(epic)}>\n                    Delete\n                  </Button>\n                </FlexRow>\n              }\n              description={\n                <div>\n                  <div>\n                    Starting Time: {dayjs(epic.start).format(\"DD-MM-YYYY\")}\n                  </div>\n                  <div>Finish Time: {dayjs(epic.end).format(\"DD-MM-YYYY\")}</div>\n                </div>\n              }\n            />\n            <div>\n              {tasks\n                ?.filter((task) => task.epicId === epic.id)\n                .map((task) => (\n                  <Link\n                    to={`/projects/${currProject?.id}/kanban?editingTaskId=${task.id}`}\n                    key={task.id}\n                  >\n                    <div>{task.name}</div>\n                  </Link>\n                ))}\n            </div>\n          </List.Item>\n        )}\n      />\n      <CreateEpic\n        onClose={() => setEpicCreateOpen(false)}\n        visible={epicCreateOpen}\n      />\n    </Container>\n  );\n};\n\nexport default EpicScreen;\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\nimport {\n  useConfigureFetch,\n  useCreateQueryConfig,\n  useDeleteQueryConfig,\n  useReorderSwimlaneQueryConfig,\n} from \"./api\";\nimport { SortProps, SwimlaneProps } from \"types\";\nimport { useProjectIdInURL } from \"./projects\";\n\nexport const useSwimlanes = (params?: Partial<SwimlaneProps>) => {\n  const $fetch = useConfigureFetch();\n\n  return useQuery<SwimlaneProps[]>([\"swimlanes\", params], () =>\n    $fetch(\"swimlanes\", { params })\n  );\n};\n\nexport const useCreateSwimlane = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: Partial<SwimlaneProps>) =>\n      $fetch(`swimlanes`, { method: \"POST\", params }),\n    useCreateQueryConfig(queryKey)\n  );\n};\n\nexport const useDeleteSwimlane = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    ({ id }: { id: number }) => $fetch(`swimlanes/${id}`, { method: \"DELETE\" }),\n    useDeleteQueryConfig(queryKey)\n  );\n};\n\nexport const useReorderSwimlane = (queryKey: QueryKey) => {\n  const $fetch = useConfigureFetch();\n\n  return useMutation(\n    (params: SortProps) =>\n      $fetch(\"swimlanes/reorder\", {\n        params,\n        method: \"POST\",\n      }),\n    useReorderSwimlaneQueryConfig(queryKey)\n  );\n};\n\nexport const useSwimlanesSearchParams = () => ({\n  projectId: useProjectIdInURL(),\n});\n\nexport const useSwimlanesQueryKey = () => [\n  \"swimlanes\",\n  useSwimlanesSearchParams(),\n];\n","import { useCallback } from \"react\";\nimport { DropResult } from \"react-beautiful-dnd\";\nimport {\n  useReorderSwimlane,\n  useSwimlanes,\n  useSwimlanesQueryKey,\n  useSwimlanesSearchParams,\n} from \"./kanban\";\nimport {\n  useReorderTask,\n  useTasks,\n  useTasksQueryKey,\n  useTasksSearchParams,\n} from \"./tasks\";\n\nexport const useDragEnd = () => {\n  const { data: swimlanes } = useSwimlanes(useSwimlanesSearchParams());\n  const { mutate: reorderSwimlane } = useReorderSwimlane(\n    useSwimlanesQueryKey()\n  );\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\n\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n\n      if (type === \"COLUMN\") {\n        const fromId = swimlanes?.[source.index].id;\n        const toId = swimlanes?.[destination.index].id;\n\n        if (!fromId || !toId || fromId === toId) {\n          return;\n        }\n\n        const type = destination.index > source.index ? \"after\" : \"before\";\n        reorderSwimlane({ fromId, referenceId: toId, type });\n      }\n\n      if (type === \"ROW\") {\n        const fromSwimlaneId = +source.droppableId;\n        const toSwimlaneId = +destination.droppableId;\n\n        const fromTask = allTasks.filter(\n          (task) => task.swimlaneId === fromSwimlaneId\n        )[source.index];\n        const toTask = allTasks.filter(\n          (task) => task.swimlaneId === toSwimlaneId\n        )[destination.index];\n\n        if (fromTask?.id === toTask?.id) {\n          return;\n        }\n\n        reorderTask({\n          fromId: fromTask?.id,\n          referenceId: toTask?.id,\n          fromSwimlaneId,\n          toSwimlaneId,\n          type:\n            fromSwimlaneId === toSwimlaneId && destination.index > source.index\n              ? \"after\"\n              : \"before\",\n        });\n      }\n    },\n    [swimlanes, reorderSwimlane, reorderTask, allTasks]\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LanesContainer = styled(\"div\")`\n  display: flex;\n  overflow-x: scroll;\n  //relative to Container\n  flex: 1;\n`;\n","import React, { ReactNode } from \"react\";\nimport { Draggable, DraggableProps } from \"react-beautiful-dnd\";\n\n// replace the default Droppable children prop type with a ReactNode one\ntype DragProps = Omit<DraggableProps, \"children\"> & {\n  children: ReactNode;\n};\n\nconst Drag = ({ children, ...restProps }: DragProps) => {\n  return (\n    <Draggable {...restProps}>\n      {(provided) => {\n        // clone the children of the DragAndDrop comp, and call cloneElement to add to it some props without explicitly passing them in\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            ref: provided.innerRef,\n          });\n        }\n        return <div />;\n      }}\n    </Draggable>\n  );\n};\n\nexport default Drag;\n","import React, { ReactNode } from \"react\";\nimport { Droppable, DroppableProps } from \"react-beautiful-dnd\";\n\n// replace the default Droppable children prop type with a ReactNode one\ntype DropProps = Omit<DroppableProps, \"children\"> & {\n  children: ReactNode;\n};\n\nconst Drop = ({ children, ...restProps }: DropProps) => {\n  return (\n    <Droppable {...restProps}>\n      {(provided) => {\n        // clone the children of the DragAndDrop comp, and call cloneElement to add to it some props without explicitly passing them in\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            provided,\n          });\n        }\n        return <div />;\n      }}\n    </Droppable>\n  );\n};\n\nexport default Drop;\n","import React from \"react\";\nimport { DroppableProvided, DroppableProvidedProps } from \"react-beautiful-dnd\";\n\ntype DropChildProps = Partial<\n  {\n    provided: DroppableProvided;\n  } & DroppableProvidedProps\n> &\n  React.HTMLAttributes<HTMLDivElement>;\n\nconst DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\n  ({ children, ...props }, ref) => {\n    return (\n      <div ref={ref} {...props}>\n        {children}\n        {props.provided?.placeholder}\n      </div>\n    );\n  }\n);\n\nexport default DropChild;\n","import { useQuery } from \"react-query\";\nimport { useConfigureFetch } from \"./api\";\nimport { TaskType } from \"types\";\n\nexport const useTaskTypes = () => {\n  const $fetch = useConfigureFetch();\n\n  return useQuery<TaskType[]>([\"taskTypes\"], () => $fetch(\"taskTypes\"));\n};\n","import React from \"react\";\nimport { useTaskTypes } from \"hooks/task-types\";\nimport IdSelect from \"../common/IdSelect\";\n\nconst TaskTypeSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: taskTypes } = useTaskTypes();\n\n  return <IdSelect options={taskTypes || []} {...props} />;\n};\n\nexport default TaskTypeSelect;\n","import { useEffect } from \"react\";\nimport { Form, Input, Modal, Button } from \"antd\";\nimport {\n  useDeleteTask,\n  useEditTask,\n  useTaskModal,\n  useTasksQueryKey,\n} from \"hooks/tasks\";\nimport UserSelect from \"../project-list/UserSelect\";\nimport TaskTypeSelect from \"../kanban/TaskTypeSelect\";\n\nconst TaskModal = () => {\n  const [form] = Form.useForm();\n  const { editingTaskId, taskDetails, close } = useTaskModal();\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(\n    useTasksQueryKey()\n  );\n  const { mutate: deleteTask } = useDeleteTask(useTasksQueryKey());\n\n  const onCancel = () => {\n    close();\n    form.resetFields();\n  };\n\n  const onOk = async () => {\n    await editTask({ ...taskDetails, ...form.getFieldsValue() });\n    close();\n  };\n\n  const startDelete = () => {\n    close();\n    Modal.confirm({\n      okText: \"Confirm\",\n      cancelText: \"Cancel\",\n      title: \"Are you sure you want to delete this task?\",\n      onOk() {\n        return deleteTask({ id: Number(editingTaskId) });\n      },\n    });\n  };\n\n  useEffect(() => {\n    form.setFieldsValue(taskDetails);\n  }, [form, taskDetails]);\n\n  return (\n    <Modal\n      forceRender\n      onCancel={onCancel}\n      onOk={onOk}\n      okText={\"Confirm\"}\n      cancelText={\"Cancel\"}\n      confirmLoading={editLoading}\n      title={\"Edit Task\"}\n      visible={!!editingTaskId}\n    >\n      <Form\n        initialValues={taskDetails}\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n      >\n        <Form.Item\n          label={\"Task Name\"}\n          name={\"name\"}\n          rules={[{ required: true, message: \"Please enter the task name\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label={\"Assignee\"} name={\"assigneeId\"}>\n          <UserSelect defaultOption={\"Assignee\"} />\n        </Form.Item>\n        <Form.Item label={\"Type\"} name={\"typeId\"}>\n          <TaskTypeSelect />\n        </Form.Item>\n      </Form>\n      <div style={{ textAlign: \"right\" }}>\n        <Button\n          onClick={startDelete}\n          size={\"small\"}\n          style={{ fontSize: \"14px\" }}\n        >\n          Delete\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default TaskModal;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  min-width: 27rem;\n  border-radius: 6px;\n  background-color: rgb(244, 245, 247);\n  display: flex;\n  flex-direction: column;\n  padding: 0.7rem 0.7rem 1rem;\n  margin-right: 1.5rem;\n`;\n\nexport const TasksWrapper = styled.div`\n  overflow-x: scroll;\n  flex: 1;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import { useState } from \"react\";\nimport { Input } from \"antd\";\nimport { Container } from \"app/components/kanban/swimlane/index.styles\";\nimport { useCreateSwimlane, useSwimlanesQueryKey } from \"hooks/kanban\";\nimport { useProjectIdInURL } from \"hooks/projects\";\n\nconst CreateSwimLane = () => {\n  const [name, setName] = useState(\"\");\n  const projectId = useProjectIdInURL();\n  const { mutateAsync: createSwimlane } = useCreateSwimlane(\n    useSwimlanesQueryKey()\n  );\n\n  const submit = async () => {\n    await createSwimlane({ name, projectId });\n    setName(\"\");\n  };\n\n  return (\n    <Container>\n      <Input\n        size={\"large\"}\n        placeholder={\"Create New Lane\"}\n        onPressEnter={submit}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </Container>\n  );\n};\n\nexport default CreateSwimLane;\n","import { Input, Button } from \"antd\";\nimport { useTasksSearchParams } from \"hooks/tasks\";\nimport { useSetSearchParams } from \"hooks/_helpers\";\nimport FlexRow from \"../common/FlexRow\";\nimport UserSelect from \"../project-list/UserSelect\";\nimport TaskTypeSelect from \"./TaskTypeSelect\";\n\nconst SearchPanel = () => {\n  const searchParams = useTasksSearchParams();\n  const setSearchParams = useSetSearchParams();\n  const reset = () => {\n    setSearchParams({\n      typeId: undefined,\n      assigneeId: undefined,\n      tagId: undefined,\n      name: undefined,\n    });\n  };\n\n  return (\n    <FlexRow marginBottom={4} gap>\n      <Input\n        style={{ width: \"20rem\" }}\n        placeholder={\"Task Name (Case Sensitive)\"}\n        value={searchParams.name}\n        onChange={(e) => setSearchParams({ name: e.target.value })}\n      />\n      <UserSelect\n        defaultOption={\"Assignee\"}\n        value={searchParams.assigneeId}\n        onChange={(value) => setSearchParams({ assigneeId: value })}\n      />\n      <TaskTypeSelect\n        defaultOption={\"Type\"}\n        value={searchParams.typeId}\n        onChange={(value) => setSearchParams({ typeId: value })}\n      />\n      <Button onClick={reset}>Clear Filter</Button>\n    </FlexRow>\n  );\n};\n\nexport default SearchPanel;\n","import { useEffect, useState } from \"react\";\nimport { Card, Input } from \"antd\";\nimport { useProjectIdInURL } from \"hooks/projects\";\nimport { useCreateTask, useTasksQueryKey } from \"hooks/tasks\";\n\nconst CreateTask = ({ swimlaneId }: { swimlaneId: number }) => {\n  const [name, setName] = useState(\"\");\n  const { mutateAsync: createTask } = useCreateTask(useTasksQueryKey());\n  const projectId = useProjectIdInURL();\n  const [inputMode, setInputMode] = useState(false);\n\n  const submit = async () => {\n    await createTask({ projectId, name, swimlaneId });\n    setInputMode(false);\n    setName(\"\");\n  };\n\n  const toggle = () => setInputMode((mode) => !mode);\n\n  useEffect(() => {\n    if (!inputMode) {\n      setName(\"\");\n    }\n  }, [inputMode]);\n\n  if (!inputMode) {\n    return <div onClick={toggle}>+Create Task</div>;\n  }\n\n  return (\n    <Card>\n      <Input\n        onBlur={toggle}\n        placeholder={\"What do you need to do?\"}\n        autoFocus\n        onPressEnter={submit}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </Card>\n  );\n};\n\nexport default CreateTask;\n","import { Button, Dropdown, Menu, Modal } from \"antd\";\nimport { useDeleteSwimlane, useSwimlanesQueryKey } from \"hooks/kanban\";\nimport { SwimlaneProps } from \"types\";\n\nconst More = ({ swimlane }: { swimlane: SwimlaneProps }) => {\n  const { mutateAsync } = useDeleteSwimlane(useSwimlanesQueryKey());\n  const startEdit = () => {\n    Modal.confirm({\n      okText: \"Confirm\",\n      cancelText: \"Cancel\",\n      title: \"Are you sure you want to delete this swimlane?\",\n      onOk() {\n        return mutateAsync({ id: swimlane.id });\n      },\n    });\n  };\n\n  const overlay = (\n    <Menu>\n      <Menu.Item>\n        <Button type={\"link\"} onClick={startEdit}>\n          Delete\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown overlay={overlay}>\n      <Button type={\"link\"}>...</Button>\n    </Dropdown>\n  );\n};\n\nexport default More;\n","export default __webpack_public_path__ + \"static/media/task.ca12dd94.svg\";","export default __webpack_public_path__ + \"static/media/bug.d8037aae.svg\";","import { useTaskTypes } from \"hooks/task-types\";\nimport taskIcon from \"assets/task.svg\";\nimport bugIcon from \"assets/bug.svg\";\n\nconst TaskType = ({ id }: { id: number }) => {\n  const { data: taskTypes } = useTaskTypes();\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\n\n  return name ? (\n    <img src={name === \"task\" ? taskIcon : bugIcon} alt={\"task-icon\"} />\n  ) : null;\n};\n\nexport default TaskType;\n","const Highlighting = ({ name, keyword }: { name: string; keyword: string }) => {\n  if (!keyword) return <>{name}</>;\n\n  const arr = name.split(keyword);\n  return (\n    <>\n      {\n        //possibly same strings with the array items, thus index as the key\n        arr.map((str, index) => (\n          <span key={index}>\n            {str}\n            {index === arr.length - 1 ? null : (\n              <span style={{ color: \"#257afd\" }}>{keyword}</span>\n            )}\n          </span>\n        ))\n      }\n    </>\n  );\n};\n\nexport default Highlighting;\n","import { Card } from \"antd\";\nimport TaskType from \"./TaskType\";\nimport Highlighting from \"./Highlighting\";\nimport { useTaskModal, useTasksSearchParams } from \"hooks/tasks\";\nimport { Task } from \"types\";\n\nconst TaskCard = ({ task }: { task: Task }) => {\n  const { startEdit } = useTaskModal();\n\n  const { name: keyword } = useTasksSearchParams();\n\n  return (\n    <Card\n      onClick={() => startEdit(task.id)}\n      style={{ marginBottom: \"0.5rem\", cursor: \"pointer\" }}\n      key={task.id}\n    >\n      <p>\n        <Highlighting keyword={keyword} name={task.name} />\n      </p>\n      <TaskType id={task.typeId} />\n    </Card>\n  );\n};\n\nexport default TaskCard;\n","import React from \"react\";\nimport { SwimlaneProps } from \"types\";\nimport { useTasks, useTasksSearchParams } from \"hooks/tasks\";\nimport Drop from \"app/components/common/Drop\";\nimport Drag from \"app/components/common/Drag\";\nimport DropChild from \"app/components/common/DropChild\";\nimport FlexRow from \"app/components/common/FlexRow\";\nimport CreateTask from \"../CreateTask\";\nimport More from \"../More\";\nimport TaskCard from \"../TaskCard\";\nimport { Container, TasksWrapper } from \"./index.styles\";\n\nconst Swimlane = React.forwardRef<HTMLDivElement, { swimlane: SwimlaneProps }>(\n  ({ swimlane, ...restProps }, ref) => {\n    const { data: allTasks } = useTasks(useTasksSearchParams());\n    const tasks = allTasks?.filter((task) => task.swimlaneId === swimlane.id);\n\n    return (\n      <Container ref={ref} {...restProps}>\n        <FlexRow spaceBetween>\n          <h4>{swimlane.name}</h4>\n          <More swimlane={swimlane} key={swimlane.id} />\n        </FlexRow>\n        <TasksWrapper>\n          <Drop\n            type={\"ROW\"}\n            direction={\"vertical\"}\n            droppableId={String(swimlane.id)}\n          >\n            {/* the style prop avoids replacing a task being rejected when a swimlane is empty */}\n            <DropChild style={{ minHeight: \"5px\" }}>\n              {tasks?.map((task, index) => (\n                <Drag\n                  key={task.id}\n                  index={index}\n                  draggableId={\"task\" + task.id}\n                >\n                  {/* HTMLDivElement to forward the ref */}\n                  <div>\n                    <TaskCard task={task} />\n                  </div>\n                </Drag>\n              ))}\n            </DropChild>\n          </Drop>\n          <CreateTask swimlaneId={swimlane.id} />\n        </TasksWrapper>\n      </Container>\n    );\n  }\n);\n\nexport default Swimlane;\n","import { Spin } from \"antd\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useDragEnd } from \"hooks/dragndrop\";\nimport { useSwimlanes, useSwimlanesSearchParams } from \"hooks/kanban\";\nimport { useProjectInURL } from \"hooks/projects\";\nimport { useTasks, useTasksSearchParams } from \"hooks/tasks\";\nimport { useDocumentTitle } from \"hooks/_helpers\";\nimport { Container, LanesContainer } from \"./index.styles\";\nimport Drag from \"app/components/common/Drag\";\nimport Drop from \"app/components/common/Drop\";\nimport DropChild from \"app/components/common/DropChild\";\nimport TaskModal from \"app/components/common/TaskModal\";\nimport CreateSwimLane from \"app/components/kanban/CreateSwimLane\";\nimport SearchPanel from \"app/components/kanban/SearchPanel\";\nimport Swimlane from \"app/components/kanban/swimlane\";\nimport { Profiler } from \"app/components/common/Profiler\";\n\nconst KanbanScreen = () => {\n  useDocumentTitle(\"Kanban\");\n\n  const { data: currProject } = useProjectInURL();\n  const { data: swimlanes, isLoading: swimlaneLoading } = useSwimlanes(\n    useSwimlanesSearchParams()\n  );\n  const { isLoading: taskLoading } = useTasks(useTasksSearchParams());\n  const isLoading = taskLoading || swimlaneLoading;\n\n  const onDragEnd = useDragEnd();\n  // console.log(currProject);\n\n  return (\n    <Profiler id={\"kanban\"}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Container>\n          <h1>{currProject?.name} Kanban</h1>\n          <SearchPanel />\n          {isLoading ? (\n            <Spin size={\"large\"}></Spin>\n          ) : (\n            <LanesContainer>\n              <Drop\n                type={\"COLUMN\"}\n                direction={\"horizontal\"}\n                droppableId={\"swimlanes\"}\n              >\n                <DropChild style={{ display: \"flex\" }}>\n                  {swimlanes?.map((swimlane, index) => (\n                    <Drag\n                      key={swimlane.id}\n                      draggableId={\"swimlane\" + swimlane.id}\n                      index={index}\n                    >\n                      <Swimlane swimlane={swimlane} />\n                    </Drag>\n                  ))}\n                </DropChild>\n              </Drop>\n              <CreateSwimLane />\n            </LanesContainer>\n          )}\n          <TaskModal />\n        </Container>\n      </DragDropContext>\n    </Profiler>\n  );\n};\n\nexport default KanbanScreen;\n","import styled from \"@emotion/styled\";\n\n//grid in project screen\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 16rem 1fr;\n  width: 100%;\n`;\n\nexport const Aside = styled.div`\n  display: flex;\n  background-color: rgb(244, 245, 247);\n`;\n\nexport const Main = styled.div`\n  display: flex;\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n`;\n","import { Menu } from \"antd\";\nimport { UnorderedListOutlined, HddOutlined } from \"@ant-design/icons\";\nimport { Link, Route, Routes, Navigate, useLocation } from \"react-router-dom\";\nimport EpicScreen from \"../epic\";\nimport KanbanScreen from \"../kanban\";\nimport { useDocumentTitle } from \"hooks/_helpers\";\nimport { Aside, Container, Main } from \"./index.styles\";\n\nconst ProjectScreen = () => {\n  useDocumentTitle(\"Project\");\n\n  //'active' when selected\n  const useRouteType = () => {\n    const units = useLocation().pathname.split(\"/\");\n    return units[units.length - 1];\n  };\n\n  return (\n    <Container>\n      <Aside>\n        <Menu\n          mode={\"inline\"}\n          selectedKeys={[useRouteType()]}\n          style={{ backgroundColor: \"#fafafa\" }}\n        >\n          <Menu.Item key={\"kanban\"} icon={<HddOutlined />}>\n            <Link to={\"kanban\"}>Kanban</Link>\n          </Menu.Item>\n          <Menu.Item key={\"epics\"} icon={<UnorderedListOutlined />}>\n            <Link to={\"epics\"}>Epics</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>\n        {/* https://reacttraining.com/blog/react-router-v6-pre/ */}\n        <Routes>\n          {/* projcects/:projectsId/kanban */}\n          <Route path={\"kanban\"} element={<KanbanScreen />} />\n          {/* projcects/:projectsId/epic */}\n          <Route path={\"epics\"} element={<EpicScreen />} />\n          {/* remove unmatched routes from the history stack to get out of the infinite loop by replacing them so that home page is reachable*/}\n          <Navigate to={window.location.pathname + \"/kanban\"} replace />\n        </Routes>\n      </Main>\n    </Container>\n  );\n};\n\nexport default ProjectScreen;\n","export default __webpack_public_path__ + \"static/media/logo-header.1a386448.svg\";","import styled from \"@emotion/styled\";\nimport FlexRow from \"./components/common/FlexRow\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 6rem 1fr;\n  height: 100vh;\n`;\n\nconst Header = styled(FlexRow)`\n  padding: 3.2rem;\n  /* box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1); */\n  z-index: 1;\n  background-color: rgb(0, 82, 204);\n`;\n\nconst HeaderLeft = styled(FlexRow)``;\n\nconst HeaderRight = styled.div``;\n\nconst Main = styled.main`\n  display: flex;\n  overflow: hidden;\n`;\n\nexport { Container, Header, HeaderLeft, HeaderRight, Main };\n","import { useEffect } from \"react\";\nimport { Drawer, Spin, Form, Input, Button } from \"antd\";\nimport {\n  useCreateProject,\n  useEditProject,\n  useProjectModal,\n  useProjectsQueryKey,\n} from \"hooks/projects\";\nimport ErrorBox from \"app/components/common/ErrorBox\";\nimport UserSelect from \"../project-list/UserSelect\";\n\nconst ProjectModal = () => {\n  const { projectModalOpen, close, projectDetails, isLoading } =\n    useProjectModal();\n  const useMutateProject = projectDetails ? useEditProject : useCreateProject;\n\n  const {\n    mutateAsync,\n    error,\n    isLoading: mutateLoading,\n  } = useMutateProject(useProjectsQueryKey());\n\n  //control the form instance below\n  const [form] = Form.useForm();\n  const onFinish = (values: any) => {\n    //when creating a project, projectDetails is undefined\n    mutateAsync({ ...projectDetails, ...values }).then(() => {\n      form.resetFields();\n      close();\n    });\n  };\n\n  // if the modal is closed without submitting any data, form will still be reset\n  const closeModal = () => {\n    form.resetFields();\n    close();\n  };\n\n  // after being mounted or updated, data will be refilled\n  useEffect(() => {\n    form.setFieldsValue(projectDetails);\n  }, [projectDetails, form]);\n\n  return (\n    <Drawer\n      forceRender={true}\n      onClose={closeModal}\n      visible={projectModalOpen}\n      width={\"100%\"}\n    >\n      <div\n        style={{\n          flexDirection: \"column\",\n          height: \"80vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {isLoading ? (\n          <Spin size={\"large\"} />\n        ) : (\n          <>\n            <h1>{projectDetails ? \"Edit Project\" : \"Create Project\"}</h1>\n            <ErrorBox error={error} />\n            <Form\n              form={form}\n              layout={\"vertical\"}\n              style={{ width: \"40rem\" }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={\"Name\"}\n                name={\"name\"}\n                rules={[\n                  { required: true, message: \"Please enter the project name\" },\n                ]}\n              >\n                <Input placeholder={\"Please enter the project name\"} />\n              </Form.Item>\n              <Form.Item\n                label={\"Team\"}\n                name={\"team\"}\n                rules={[\n                  { required: true, message: \"Please enter the team name\" },\n                ]}\n              >\n                <Input placeholder={\"Please enter the team name\"} />\n              </Form.Item>\n              <Form.Item label={\"Project Lead\"} name={\"projectLeadId\"}>\n                <UserSelect defaultOption={\"Project Lead\"} />\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  loading={mutateLoading}\n                  type={\"primary\"}\n                  htmlType={\"submit\"}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </div>\n    </Drawer>\n  );\n};\n\nexport default ProjectModal;\n","import { Popover, Typography, List, Divider, Button } from \"antd\";\nimport { useProjectModal, useProjects } from \"hooks/projects\";\n\nconst ProjectPopover = () => {\n  const { open } = useProjectModal();\n  //different queryKey for different caches in useProjects, hence refetch\n  const { data: projects, refetch } = useProjects();\n  const markedProjects = projects?.filter((project) => project.marked);\n\n  const content = (\n    <div style={{ minWidth: \"30rem\" }}>\n      <Typography.Text type={\"secondary\"}>Marked Projects</Typography.Text>\n      <List>\n        {markedProjects?.map((project) => (\n          <List.Item key={project.id}>\n            <List.Item.Meta title={project.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n      <Button onClick={open} type={\"link\"} style={{ padding: 0 }}>\n        Create Project\n      </Button>\n    </div>\n  );\n\n  return (\n    <Popover\n      placement={\"bottom\"}\n      content={content}\n      onVisibleChange={() => refetch()}\n    >\n      <span style={{ fontSize: \"1.8rem\", color: \"#fff\" }}>Projects</span>\n    </Popover>\n  );\n};\n\nexport default ProjectPopover;\n","import { Popover, Typography, List, Divider } from \"antd\";\nimport { useUsers } from \"hooks/users\";\n\nconst UserPopover = () => {\n  const { data: users, refetch } = useUsers();\n\n  const content = (\n    <div style={{ minWidth: \"30rem\" }}>\n      <Typography.Text type={\"secondary\"}>Users</Typography.Text>\n      <List>\n        {users?.map((user) => (\n          <List.Item key={user.id}>\n            <List.Item.Meta title={user.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <Popover\n      placement={\"bottom\"}\n      content={content}\n      onVisibleChange={() => refetch()}\n      arrowPointAtCenter\n    >\n      <span style={{ fontSize: \"1.8rem\", color: \"#fff\" }}>Users</span>\n    </Popover>\n  );\n};\n\nexport default UserPopover;\n","import { Navigate, Route, Routes } from \"react-router-dom\";\nimport { Dropdown, Menu, Button } from \"antd\";\nimport ProjectListScreen from \"./screens/project-list\";\nimport ProjectScreen from \"./screens/project\";\nimport { useAuth } from \"hooks/auth\";\nimport { resetRoutes } from \"utils\";\nimport logoHeader from \"assets/logo-header.svg\";\nimport {\n  Container,\n  Header,\n  HeaderLeft,\n  HeaderRight,\n  Main,\n} from \"./AuthenticatedApp.styles\";\nimport ProjectModal from \"./components/common/ProjectModal\";\nimport ProjectPopover from \"./components/common/ProjectPopover\";\nimport UserPopover from \"./components/common/UserPopover\";\n\nexport default function AuthenticatedApp() {\n  return (\n    <Container>\n      <AuthedHeader />\n      <Main>\n        <Routes>\n          <Route path={\"/projects\"} element={<ProjectListScreen />} />\n          <Route\n            //https://reacttraining.com/blog/react-router-v6-pre/\n            path={\"/projects/:projectId/*\"}\n            element={<ProjectScreen />}\n          />\n          <Navigate to={\"/projects\"} />\n        </Routes>\n      </Main>\n      <ProjectModal />\n    </Container>\n  );\n}\n\nconst AuthedHeader = () => {\n  return (\n    <Header spaceBetween>\n      <HeaderLeft gap={true}>\n        <Button\n          type={\"link\"}\n          onClick={resetRoutes}\n          style={{ display: \"flex\", alignItems: \"center\", padding: 0 }}\n        >\n          <img src={logoHeader} alt={\"logo\"} style={{ height: \"4.5rem\" }} />\n        </Button>\n        <ProjectPopover />\n        <UserPopover />\n      </HeaderLeft>\n      <HeaderRight>\n        <User />\n      </HeaderRight>\n    </Header>\n  );\n};\n\nconst User = () => {\n  const { logout, user } = useAuth();\n\n  return (\n    user && (\n      <>\n        <span style={{ color: \"#fff\" }}>Hi,</span>\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item key={\"logout\"}>\n                <Button type={\"link\"} onClick={logout}>\n                  Log Out\n                </Button>\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <Button\n            type={\"link\"}\n            onClick={(e) => {\n              e.preventDefault();\n            }}\n            style={{ padding: \"0.5rem\", color: \"#fff\" }}\n          >\n            {user.name}\n          </Button>\n        </Dropdown>\n      </>\n    )\n  );\n};\n"],"sourceRoot":""}